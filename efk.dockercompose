version: '3.8'
services:
# LOGS
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
    container_name: elasticsearch
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    ports:
      - ${ES_PORT}:9200
    restart: always
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
  kibana:
    depends_on:
      - elasticsearch
    image: docker.elastic.co/kibana/kibana:${STACK_VERSION}
    container_name: kibana
    volumes:
      - kibana-data:/usr/share/kibana/data
    ports:
     - ${KIBANA_PORT}:5601
    restart: always
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
  filebeat:
    image: "docker.elastic.co/beats/filebeat:7.2.0"
    container_name: filebeat
    user: root
    volumes:
        - "./filebeat.yml:/usr/share/filebeat/filebeat.yml:ro"
        - /var/lib/docker:/var/lib/docker:ro
        - /var/run/docker.sock:/var/run/docker.sock
# METRICS
  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3000:3000
  prometheus:
    image: 'prom/prometheus:latest'
    container_name: prometheus
    volumes:
      - "./prometheus.yml:/etc/prometheus/prometheus.yml"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - '9090:9090'
  # https://grafana.com/grafana/dashboards/14282-cadvisor-exporter/
  cadvisor:
    image: 'gcr.io/cadvisor/cadvisor'
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run/docker.sock:/var/run/docker.sock:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - '8085:8080'

volumes:
  elasticsearch-data:
    driver: local
  kibana-data:
    driver: local
